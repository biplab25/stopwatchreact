{"version":3,"sources":["components/BtnComponent.js","components/TimerComponent.js","components/ColorComponent.js","App.js","reportWebVitals.js","index.js"],"names":["BtnComponent","props","className","status","onClick","start","stop","reset","resume","TimerComponent","style","backgroundColor","color","time","h","m","s","ms","ColorComponent","padding","borderRadius","margin","changeSkyColor","changePinkColor","changeGigoColor","changeYellowColor","App","useState","setTime","interv","setInterv","setColor","setStatus","run","setInterval","updatedMs","updatedS","updatedM","updatedH","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f16d2627.chunk.js","sourcesContent":["import React from 'react'\n\nfunction BtnComponent(props) {\n    return (\n        <div className=\"div-button-component\">\n            {(props.status === 0)? \n            <button className=\"button-component-start\" onClick={props.start}>START</button>:\" \"\n            }\n            {(props.status === 1)? \n            <>\n            <button className=\"button-component-stop\" onClick={props.stop}>STOP</button>\n            <button className=\"button-component-stop\" onClick={props.reset}>Reset</button>\n            </>:\" \"\n            }\n            {(props.status === 2)?\n            <>\n            <button className=\"button-component-stop\" onClick={props.resume}>Resume</button>\n            <button className=\"button-component-stop\" onClick={props.reset}>Reset</button>\n            </>:\" \"\n            }\n        </div>\n    )\n}\n\nexport default BtnComponent;\n","import React from 'react'\n\nfunction TimerComponent(props) {\n    \n    return (\n        <div>\n            <div style={{backgroundColor: props.color}} className=\"timer-component\">\n                <h1>Reactjs Stopwatch</h1>\n                <span>{(props.time.h >= 10)? props.time.h : \"0\"+ props.time.h}</span>&nbsp;:&nbsp;\n                <span>{(props.time.m >= 10)? props.time.m : \"0\"+ props.time.m}</span>&nbsp;:&nbsp;\n                <span>{(props.time.s >= 10)? props.time.s : \"0\"+ props.time.s}</span>&nbsp;:&nbsp;\n                <span>{(props.time.ms >= 10)? props.time.ms : \"0\"+ props.time.ms}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default TimerComponent;\n","import React from 'react'\n\nfunction ColorComponent(props) {\n    return (\n        <div className=\"color-component\">\n            <h1>CHANGE BACKGROUND COLOR</h1>\n            <button style={{backgroundColor:'#4287f5',padding:\"15px\", borderRadius:\"25px\",margin:\"3px\"}} onClick={props.changeSkyColor}></button>\n            <button style={{backgroundColor:\"#c9245e\",padding:\"15px\", borderRadius:\"25px\",margin:\"3px\" }} onClick={props.changePinkColor}></button>\n            <button style={{backgroundColor: \"#0a4952\",padding:\"15px\", borderRadius:\"25px\",margin:\"3px\"}} onClick={props.changeGigoColor}></button>\n            <button style={{backgroundColor: \"#8c8811\",padding:\"15px\", borderRadius:\"25px\",margin:\"3px\"}} onClick={props.changeYellowColor}></button>\n        </div>\n    )\n}\n\nexport default ColorComponent;\n","import React,{useState} from 'react'\nimport BtnComponent from './components/BtnComponent';\nimport TimerComponent from './components/TimerComponent';\nimport ColorComponent from './components/ColorComponent'\nimport './App.css';\n\nfunction App() {\n  const [time, setTime] = useState({ms:0,s:0,m:0,h:0});\n  const [interv, setInterv] = useState();\n  const [color, setColor] = useState('rgb(20, 15, 46)');\n  const [status, setStatus] = useState(0);\n  \n  const start=()=>{\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 10));\n  }\n  var updatedMs = time.ms, updatedS = time.s, updatedM = time.m, updatedH = time.h;\n\n  const run = () => {\n    if(updatedM === 60){\n      updatedH++;\n      updatedM = 0;\n    }\n    if(updatedS === 60){\n      updatedM++;\n      updatedS = 0;\n    }\n    if(updatedMs === 100){\n      updatedS++;\n      updatedMs = 0;\n    }\n    updatedMs++;\n    return setTime({ms:updatedMs, s:updatedS, m:updatedM, h:updatedH});\n  };\n\n  const stop=()=>{\n    clearInterval(interv);\n    setStatus(2);\n  }\n\n  const resume = () => start();\n\n  const reset = () => {\n    clearInterval(interv);\n    setStatus(0);\n    setTime({ms:0, s:0, m:0, h:0})\n  };\n\n  const changeSkyColor=()=>{\n    setColor(\"#4287f5\");\n  }\n\n  const changePinkColor=()=>{\n    setColor(\"#c9245e\");\n  }\n\n  const changeGigoColor=()=>{\n    setColor(\"#0a4952\");\n  }\n\n  const changeYellowColor=()=>{\n    setColor(\"#8c8811\");\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"stopwatch\">\n      <TimerComponent time={time} color={color}/>\n        <BtnComponent status={status} resume={resume} reset={reset} stop={stop} start={start}/>\n        <ColorComponent changeSkyColor={changeSkyColor} changeGigoColor={changeGigoColor} changePinkColor={changePinkColor} changeYellowColor={changeYellowColor} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}